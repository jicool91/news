package ru.gang.newsBot.bot;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.DefaultBotOptions;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import ru.gang.newsBot.model.NewsItem;
import ru.gang.newsBot.service.NewsAnalyzerService;
import ru.gang.newsBot.service.NewsPosterService;
import ru.gang.newsBot.service.RssParserService;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Component
public class NewsBot extends TelegramLongPollingBot {

    private final RssParserService rssParserService;
    private final NewsAnalyzerService newsAnalyzerService;
    private final NewsPosterService newsPosterService;

    private final Set<String> sentNews = new HashSet<>();

    public NewsBot(DefaultBotOptions options,
                   RssParserService rssParserService,
                   NewsAnalyzerService newsAnalyzerService,
                   NewsPosterService newsPosterService) {
        super(options);
        this.rssParserService = rssParserService;
        this.newsAnalyzerService = newsAnalyzerService;
        this.newsPosterService = newsPosterService;
        System.out.println("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Telegram API");
    }

    @Value("${telegram.bot.username}")
    @Override
    public String getBotUsername() {
        // –£–∫–∞–∂–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
        return "News_parser_all_bot";
    }

    @Value("${telegram.bot.token}")
    @Override
    public String getBotToken() {
        // –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API-—Ç–æ–∫–µ–Ω
        return "7911138040:AAGVHPinpk116wKKMJ87KBKK6GuPQN28ESA";
    }

    @Override
    public void onUpdateReceived(Update update) {
        System.out.println("üì• –ü–æ–ª—É—á–µ–Ω update: " + update);

        if (update.hasMessage() && update.getMessage().hasText()) {
            String text = update.getMessage().getText();
            Long chatId = update.getMessage().getChatId();

            System.out.println("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + text);

            if ("/fetch".equals(text)) {
                System.out.println("üöÄ –ö–æ–º–∞–Ω–¥–∞ /fetch –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!");
                fetchAndPostNews();
                sendTextMessage(chatId, "‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
            }
        }
    }

    private void sendTextMessage(Long chatId, String text) {
        try {
            SendMessage message = new SendMessage(chatId.toString(), text);
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    public void fetchAndPostNews() {
        System.out.println("üîÑ –ó–∞–ø—É—â–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π...");
        List<NewsItem> newsList = rssParserService.fetchNewsWithCategory();

        System.out.println("üìå –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:");
        for (NewsItem item : newsList) {  // –ò–∑–º–µ–Ω—è–µ–º –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ —Ü–∏–∫–ª–µ
            System.out.println("üìú " + item.getTitle() + " | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + item.getCategory());
        }

        for (NewsItem news : newsList) {
            if (sentNews.contains(news.getUrl())) {
                System.out.println("‚è≠ –ü—Ä–æ–ø—É—Å–∫: —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ - " + news.getTitle());
                continue;
            }

            System.out.println("‚úç –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏: " + news.getTitle());

            // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ RssParserService
            String channelId = rssParserService.getCategoryChannel(news.getCategory());
            if (channelId == null) {
                System.out.println("‚ö† –ù–µ –Ω–∞–π–¥–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: " + news.getCategory());
                continue;
            }

            System.out.println("üì§ –ì–æ—Ç–æ–≤–∏–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ –∫–∞–Ω–∞–ª " + channelId + " –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + news.getCategory());
            SendPhoto photoMessage = newsPosterService.buildPhotoMessage(
                    news.getTitle(),
                    news.getUrl(),
                    news.getImageUrl(),
                    news.getDescription(),
                    channelId
            );

            try {
                execute(photoMessage);
                sentNews.add(news.getUrl()); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
                System.out.println("‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª: " + channelId);
            } catch (TelegramApiException e) {
                System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: " + e.getMessage());
            }
        }
    }

}
