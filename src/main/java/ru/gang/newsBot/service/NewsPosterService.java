package ru.gang.newsBot.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;

@Service
public class NewsPosterService {
    private static final Logger log = LoggerFactory.getLogger(NewsPosterService.class);
    private static final int MAX_CAPTION_LENGTH = 1024;

    public SendPhoto buildPhotoMessage(String newsTitle, String newsUrl, String newsSource, String imageUrl, String description, String channelId) {
        String formattedMessage = "üì¢ *–ì–ª–∞–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–Ω—è* üì¢\n\n"
                + (newsTitle != null && !newsTitle.isBlank() ? "*" + newsTitle + "*\n\n" : "")
                + (description != null && !description.isBlank() ? description + "\n\n" : "")
                + "üîó [–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é](" + newsUrl + ")";

        if (formattedMessage.length() > MAX_CAPTION_LENGTH) {
            log.debug("–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç Telegram ({}), –æ–±—Ä–µ–∑–∞–µ–º", MAX_CAPTION_LENGTH);
            formattedMessage = formattedMessage.substring(0, MAX_CAPTION_LENGTH - 3) + "...";
        }

        SendPhoto photoMessage = new SendPhoto();
        photoMessage.setChatId(channelId);
        photoMessage.setPhoto(new InputFile(imageUrl));
        photoMessage.setCaption(formattedMessage);
        photoMessage.setParseMode("Markdown");

        log.debug("–°–æ–∑–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞ {}: {} —Å–∏–º–≤–æ–ª–æ–≤", channelId, formattedMessage.length());
        return photoMessage;
    }
}
